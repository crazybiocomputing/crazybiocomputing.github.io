
import java.awt.*;
import java.awt.geom.*;
import java.applet.*;
import java.awt.event.*;
import java.io.InputStream;
import javax.swing.JFrame;
import java.util.Random;

// These classes are for Url's.
import java.net.*;

public class Plasma extends CrazyApplet {

    Thread animator;
	
     // Your image name;
     Image my_background;
     Image imgs[]; // CrazyHoveringFrame
     
     CrazyOKButton buttons[];
     CrazyHoveringFrame hovers[];

 // The applet base URL
     URL base;


     int x, y;
     Font ttf_font;


     // The object we will use to write with instead of the standard screen graphics
     Graphics bufferGraphics;
     // The image that will contain everything that has been drawn on
     // bufferGraphics.
     Image offscreen;
     // To get the width and height of the applet.
     Dimension dim;
	
     public void loadImages() 
     {
          // This object will allow you to control loading
          MediaTracker mt;

          // initialize the MediaTracker
          mt = new MediaTracker(this);

          // The try-catch is necessary when the URL isn't valid
          // Ofcourse this one is valid, since it is generated by
          // Java itself.

          try {
               // getDocumentbase gets the applet path.
               base = getCodeBase();
          }
          catch (Exception e) {}

          // Here we load the image.
          // Only Gif and JPG are allowed. Transparent gif also.
          my_background = getImage(base,"background.png");

	  String names[] = {
				"icon0234",
				"icon2078",
				"icon5492",
				"icon7043",
				"icon9009",
				"plasma0234_ij",
				"plasma2078_ij",
				"plasma5492_ij",
				"plasma7043_ij",
				"plasma9009_ij"
				
		};
	  imgs = new Image[names.length];
	  for (int i = 0; i < names.length; i++) 
	  	imgs[i] = getImage(base,names[i] + ".png");
	  
          // tell the MediaTracker to keep an eye on this image, and give it ID 1;
          mt.addImage(my_background,1);

	  for (int i = 0; i < names.length; i++) 
	  	mt.addImage(imgs[i],1 + i);
          // now tell the mediaTracker to stop the applet execution
          // (in this example don't paint) until the images are fully loaded.
          // must be in a try catch block.

         try {
               mt.waitForAll();
          }
          catch (InterruptedException  e) {}
     
     }
     
     
	public void create_widgets() 
		{
			int orgx = 35;
			
			setBackground(my_background);
			
			buttons = new CrazyOKButton[5];
			for (int i = 0; i < 5; i++) {
				buttons[i] = new CrazyOKButton(orgx, 513, 100, 100);
				buttons[i].setSkin(imgs[i],imgs[i]);
				add(buttons[i]);
				orgx += imgs[i].getWidth(this);
			}
			
			orgx = 100;
			hovers = new CrazyHoveringFrame[5];
			for (int i = 0; i < 5; i++) {
				hovers[i] = new CrazyHoveringFrame(orgx, 10);
				hovers[i].setSkin(imgs[i + 5]);
				add(hovers[i]);
				hovers[i].mask();
				orgx += 30;
			}
     
		}
    
	void doActionWhenMouseReleased() 
		{
			if (activeWidget != null) {
			switch (activeWidget.getID()) {
			case 1:  // icon 
				hovers[0].unmask();
				break;
			case 2:  // icon 
				hovers[1].unmask();
				break;
			case 3:  // icon 
				hovers[2].unmask();
				break;
			case 4:  // icon 
				hovers[3].unmask();
				break;
			case 5:  // icon 
				hovers[4].unmask();
				break;
			}
			
			}	
		
		}
		       

    
} // end of class Weight

